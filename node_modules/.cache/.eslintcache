[{"/home/alok/Downloads/TrndZaade/frontend/src/index.js":"1","/home/alok/Downloads/TrndZaade/frontend/src/reportWebVitals.js":"2","/home/alok/Downloads/TrndZaade/frontend/src/App.js":"3","/home/alok/Downloads/TrndZaade/frontend/src/Store.js":"4","/home/alok/Downloads/TrndZaade/frontend/src/utils.js":"5","/home/alok/Downloads/TrndZaade/frontend/src/screens/HomeScreen.js":"6","/home/alok/Downloads/TrndZaade/frontend/src/screens/ShippingAddressScreen.js":"7","/home/alok/Downloads/TrndZaade/frontend/src/screens/ProductScreen.js":"8","/home/alok/Downloads/TrndZaade/frontend/src/screens/PaymentMethodScreen.js":"9","/home/alok/Downloads/TrndZaade/frontend/src/screens/SigninScreen.js":"10","/home/alok/Downloads/TrndZaade/frontend/src/screens/SignupScreen.js":"11","/home/alok/Downloads/TrndZaade/frontend/src/screens/CartScreen.js":"12","/home/alok/Downloads/TrndZaade/frontend/src/screens/OrderHistoryScreen.js":"13","/home/alok/Downloads/TrndZaade/frontend/src/screens/OrderScreen.js":"14","/home/alok/Downloads/TrndZaade/frontend/src/screens/ProfileScreen.js":"15","/home/alok/Downloads/TrndZaade/frontend/src/screens/PlaceOrderScreen.js":"16","/home/alok/Downloads/TrndZaade/frontend/src/screens/DashboardScreen.js":"17","/home/alok/Downloads/TrndZaade/frontend/src/screens/SearchScreen.js":"18","/home/alok/Downloads/TrndZaade/frontend/src/screens/ProductListScreen.js":"19","/home/alok/Downloads/TrndZaade/frontend/src/screens/ProductEditScreen.js":"20","/home/alok/Downloads/TrndZaade/frontend/src/screens/UserListScreen.js":"21","/home/alok/Downloads/TrndZaade/frontend/src/screens/OrderListScreen.js":"22","/home/alok/Downloads/TrndZaade/frontend/src/screens/UserEditScreen.js":"23","/home/alok/Downloads/TrndZaade/frontend/src/screens/MapScreen.js":"24","/home/alok/Downloads/TrndZaade/frontend/src/screens/ForgetPasswordScreen.js":"25","/home/alok/Downloads/TrndZaade/frontend/src/screens/ResetPasswordScreen.js":"26","/home/alok/Downloads/TrndZaade/frontend/src/components/SearchBox.js":"27","/home/alok/Downloads/TrndZaade/frontend/src/components/AdminRoute.js":"28","/home/alok/Downloads/TrndZaade/frontend/src/components/ProtectedRoute.js":"29","/home/alok/Downloads/TrndZaade/frontend/src/components/Product.js":"30","/home/alok/Downloads/TrndZaade/frontend/src/components/LoadingBox.js":"31","/home/alok/Downloads/TrndZaade/frontend/src/components/MessageBox.js":"32","/home/alok/Downloads/TrndZaade/frontend/src/components/CheckoutSteps.js":"33","/home/alok/Downloads/TrndZaade/frontend/src/components/Rating.js":"34","/home/alok/Downloads/TrndZaade/frontend/src/screens/RazorpayPaymentScreen.js":"35","/home/alok/Downloads/TrndZaade/frontend/src/components/Sortingbar.js":"36","/home/alok/Downloads/TrndZaade/frontend/src/components/Payment.js":"37","/home/alok/Downloads/TrndZaade/frontend/src/screens/Footer.js":"38"},{"size":915,"mtime":1676564142000,"results":"39","hashOfConfig":"40"},{"size":362,"mtime":1676564142000,"results":"41","hashOfConfig":"40"},{"size":11994,"mtime":1682056504935,"results":"42","hashOfConfig":"40"},{"size":2829,"mtime":1676564142000,"results":"43","hashOfConfig":"40"},{"size":150,"mtime":1676564142000,"results":"44","hashOfConfig":"40"},{"size":5596,"mtime":1682056616534,"results":"45","hashOfConfig":"40"},{"size":4155,"mtime":1682049403444,"results":"46","hashOfConfig":"40"},{"size":8903,"mtime":1682049562605,"results":"47","hashOfConfig":"40"},{"size":4453,"mtime":1682010256507,"results":"48","hashOfConfig":"40"},{"size":2508,"mtime":1676564142000,"results":"49","hashOfConfig":"40"},{"size":3106,"mtime":1676564142000,"results":"50","hashOfConfig":"40"},{"size":4356,"mtime":1682009996606,"results":"51","hashOfConfig":"40"},{"size":2977,"mtime":1682010121251,"results":"52","hashOfConfig":"40"},{"size":11982,"mtime":1682134498896,"results":"53","hashOfConfig":"40"},{"size":9522,"mtime":1682049314930,"results":"54","hashOfConfig":"40"},{"size":9494,"mtime":1682053522111,"results":"55","hashOfConfig":"40"},{"size":4109,"mtime":1682010041560,"results":"56","hashOfConfig":"40"},{"size":9396,"mtime":1682052429279,"results":"57","hashOfConfig":"40"},{"size":5963,"mtime":1682049241304,"results":"58","hashOfConfig":"40"},{"size":8896,"mtime":1682078045122,"results":"59","hashOfConfig":"40"},{"size":4062,"mtime":1682049420275,"results":"60","hashOfConfig":"40"},{"size":4474,"mtime":1682010162789,"results":"61","hashOfConfig":"40"},{"size":4122,"mtime":1676564142000,"results":"62","hashOfConfig":"40"},{"size":3588,"mtime":1676564142000,"results":"63","hashOfConfig":"40"},{"size":1591,"mtime":1676564142000,"results":"64","hashOfConfig":"40"},{"size":2187,"mtime":1676564142000,"results":"65","hashOfConfig":"40"},{"size":1092,"mtime":1682006371961,"results":"66","hashOfConfig":"40"},{"size":323,"mtime":1676564142000,"results":"67","hashOfConfig":"40"},{"size":307,"mtime":1676564142000,"results":"68","hashOfConfig":"40"},{"size":1591,"mtime":1682049637666,"results":"69","hashOfConfig":"40"},{"size":225,"mtime":1676564142000,"results":"70","hashOfConfig":"40"},{"size":166,"mtime":1676564142000,"results":"71","hashOfConfig":"40"},{"size":484,"mtime":1676564142000,"results":"72","hashOfConfig":"40"},{"size":1459,"mtime":1676564142000,"results":"73","hashOfConfig":"40"},{"size":2787,"mtime":1681033972416,"results":"74","hashOfConfig":"40"},{"size":693,"mtime":1682005162033,"results":"75","hashOfConfig":"40"},{"size":1562,"mtime":1682052496771,"results":"76","hashOfConfig":"40"},{"size":5709,"mtime":1682055770570,"results":"77","hashOfConfig":"40"},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},"1ll4i24",{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"81"},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"81"},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"81"},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"112","messages":"113","suppressedMessages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"115","messages":"116","suppressedMessages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"118","messages":"119","suppressedMessages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"121","messages":"122","suppressedMessages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124"},{"filePath":"125","messages":"126","suppressedMessages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"81"},{"filePath":"129","messages":"130","suppressedMessages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"81"},{"filePath":"133","messages":"134","suppressedMessages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"136","messages":"137","suppressedMessages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"139","messages":"140","suppressedMessages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"142","messages":"143","suppressedMessages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"145","messages":"146","suppressedMessages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"148","messages":"149","suppressedMessages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"151","messages":"152","suppressedMessages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"154","messages":"155","suppressedMessages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"81"},{"filePath":"158","messages":"159","suppressedMessages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"161","messages":"162","suppressedMessages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"164","messages":"165","suppressedMessages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"167","messages":"168","suppressedMessages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"170","messages":"171","suppressedMessages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"173","messages":"174","suppressedMessages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"176","messages":"177","suppressedMessages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"179","messages":"180","suppressedMessages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"182","messages":"183","suppressedMessages":"184","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"185","messages":"186","suppressedMessages":"187","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"188","messages":"189","suppressedMessages":"190","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"81"},{"filePath":"192","messages":"193","suppressedMessages":"194","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"81"},{"filePath":"196","messages":"197","suppressedMessages":"198","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"81"},{"filePath":"200","messages":"201","suppressedMessages":"202","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"81"},"/home/alok/Downloads/TrndZaade/frontend/src/index.js",[],[],[],"/home/alok/Downloads/TrndZaade/frontend/src/reportWebVitals.js",[],[],"/home/alok/Downloads/TrndZaade/frontend/src/App.js",["204","205"],[],"import { BrowserRouter, Link, Route, Routes } from 'react-router-dom';\nimport { toast, ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport HomeScreen from './screens/HomeScreen';\nimport ProductScreen from './screens/ProductScreen';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Badge from 'react-bootstrap/Badge';\nimport Nav from 'react-bootstrap/Nav';\nimport NavDropdown from 'react-bootstrap/NavDropdown';\nimport Container from 'react-bootstrap/Container';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport { useContext, useEffect, useState } from 'react';\nimport { Store } from './Store';\nimport CartScreen from './screens/CartScreen';\nimport SigninScreen from './screens/SigninScreen';\nimport ShippingAddressScreen from './screens/ShippingAddressScreen';\nimport SignupScreen from './screens/SignupScreen';\nimport PaymentMethodScreen from './screens/PaymentMethodScreen';\nimport PlaceOrderScreen from './screens/PlaceOrderScreen';\nimport OrderScreen from './screens/OrderScreen';\nimport OrderHistoryScreen from './screens/OrderHistoryScreen';\nimport ProfileScreen from './screens/ProfileScreen';\nimport Button from 'react-bootstrap/Button';\nimport { getError } from './utils';\nimport axios from 'axios';\nimport SearchBox from './components/SearchBox';\nimport SearchScreen from './screens/SearchScreen';\nimport ProtectedRoute from './components/ProtectedRoute';\nimport DashboardScreen from './screens/DashboardScreen';\nimport AdminRoute from './components/AdminRoute';\nimport ProductListScreen from './screens/ProductListScreen';\nimport ProductEditScreen from './screens/ProductEditScreen';\nimport OrderListScreen from './screens/OrderListScreen';\nimport UserListScreen from './screens/UserListScreen';\nimport UserEditScreen from './screens/UserEditScreen';\nimport MapScreen from './screens/MapScreen';\nimport ForgetPasswordScreen from './screens/ForgetPasswordScreen';\nimport ResetPasswordScreen from './screens/ResetPasswordScreen';\nimport RazorpayPaymentScreen from './screens/RazorpayPaymentScreen';\nimport Sortingbar from './components/Sortingbar';\nimport \"./App.css\"\nimport Footer from './screens/Footer';\n\n\nfunction App() {\n  const { state, dispatch: ctxDispatch } = useContext(Store);\n  const { fullBox, cart, userInfo } = state;\n\n  const signoutHandler = () => {\n    ctxDispatch({ type: 'USER_SIGNOUT' });\n    localStorage.removeItem('userInfo');\n    localStorage.removeItem('shippingAddress');\n    localStorage.removeItem('paymentMethod');\n    window.location.href = '/signin';\n  };\n  const [sidebarIsOpen, setSidebarIsOpen] = useState(false);\n  const [categories, setCategories] = useState([]);\n\n  useEffect(() => {\n    const fetchCategories = async () => {\n      try {\n        const { data } = await axios.get(`/api/products/categories`);\n        setCategories(data);\n      } catch (err) {\n        toast.error(getError(err));\n      }\n    };\n    fetchCategories();\n  }, []);\n  return (\n    <BrowserRouter>\n      <div\n        className={\n          sidebarIsOpen\n            ? fullBox\n              ? 'site-container active-cont d-flex flex-column full-box'\n              : 'site-container active-cont d-flex flex-column'\n            : fullBox\n            ? 'site-container d-flex flex-column full-box' \n            : 'site-container d-flex flex-column'\n        }\n      >\n        <ToastContainer position=\"bottom-center\" limit={1} />\n        <header>\n          <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\">\n          <Container fluid>\n              {/* <Button\n                variant=\"dark\"\n                onClick={() => setSidebarIsOpen(!sidebarIsOpen)}\n              >\n                <i className=\"fas fa-bars\"></i>\n              </Button> */}\n\n              \n\n              <LinkContainer to=\"/\">\n                <Navbar.Brand className='me-6'>Trendzaade</Navbar.Brand>\n              </LinkContainer>\n              <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n              <Navbar.Collapse id=\"basic-navbar-nav\" className='marginer'>\n                <SearchBox />\n                <Nav className=\"me-auto  w-100  justify-content-end\">\n\n                <Link to=\"/search\" className=\"nav-link\">\n                    Products\n                </Link>\n\n\n                  <Link to=\"/cart\" className=\"nav-link\">\n                    Cart\n                    {cart.cartItems.length > 0 && (\n                      <Badge pill bg=\"danger\">\n                        {cart.cartItems.reduce((a, c) => a + c.quantity, 0)}\n                      </Badge>\n                    )}\n                  </Link>\n                  {userInfo ? (\n                    <NavDropdown title={userInfo.name} id=\"basic-nav-dropdown\">\n                      <LinkContainer to=\"/profile\">\n                        <NavDropdown.Item>User Profile</NavDropdown.Item>\n                      </LinkContainer>\n                      <LinkContainer to=\"/orderhistory\">\n                        <NavDropdown.Item>Order History</NavDropdown.Item>\n                      </LinkContainer>\n                      <NavDropdown.Divider />\n                      <Link\n                        className=\"dropdown-item\"\n                        to=\"#signout\"\n                        onClick={signoutHandler}\n                      >\n                        Sign Out\n                      </Link>\n                    </NavDropdown>\n                  ) : (\n                    <Link className=\"nav-link\" to=\"/signin\">\n                      Sign In\n                    </Link>\n                  )}\n                  {userInfo && userInfo.isAdmin && (\n                    <NavDropdown title=\"Admin\" id=\"admin-nav-dropdown\">\n                      <LinkContainer to=\"/admin/dashboard\">\n                        <NavDropdown.Item>Dashboard</NavDropdown.Item>\n                      </LinkContainer>\n                      <LinkContainer to=\"/admin/products\">\n                        <NavDropdown.Item>Products</NavDropdown.Item>\n                      </LinkContainer>\n                      <LinkContainer to=\"/admin/orders\">\n                        <NavDropdown.Item>Orders</NavDropdown.Item>\n                      </LinkContainer>\n                      <LinkContainer to=\"/admin/users\">\n                        <NavDropdown.Item>Users</NavDropdown.Item>\n                      </LinkContainer>\n                    </NavDropdown>\n                  )}\n                </Nav>\n              </Navbar.Collapse>\n            </Container>\n          </Navbar>\n          {/* <Sortingbar link = \"NAME\" /> */}\n\n\n          <Navbar bg=\"light\" expand=\"lg\" className='shadow-sm p-3 mb-5 bg-white rounded'>\n      <Container fluid>\n        <Navbar.Toggle aria-controls=\"navbarScroll\" />\n        <Navbar.Collapse id=\"navbarScroll\">\n          <Nav\n            className=\"me-auto my-2 my-lg-0\"\n            style={{ maxHeight: '100px' }}\n            navbarScroll\n          >\n            {categories.map((category) => (\n              <Nav.Item key={category}>\n                <LinkContainer\n                  to={{ pathname: '/search', search: `category=${category}` }}\n                  onClick={() => setSidebarIsOpen(false)}\n                >\n                {/* <Nav.Link href=\"#action2\">link</Nav.Link> */}\n                  <Nav.Link>{category}</Nav.Link>\n                </LinkContainer>\n              </Nav.Item>\n            ))}\n          </Nav>\n        </Navbar.Collapse>\n      </Container>\n    </Navbar>\n\n\n\n        </header>\n        <div\n          className={\n            sidebarIsOpen\n              ? 'active-nav side-navbar d-flex justify-content-between flex-wrap flex-column'\n              : 'side-navbar d-flex justify-content-between flex-wrap flex-column'\n          }\n        >\n          <Nav className=\"flex-column text-white w-100 p-2\">\n            <Nav.Item>\n              <strong>Categories</strong>\n            </Nav.Item>\n            {categories.map((category) => (\n              <Nav.Item key={category}>\n                <LinkContainer\n                  to={{ pathname: '/search', search: `category=${category}` }}\n                  onClick={() => setSidebarIsOpen(false)}\n                >\n                  <Nav.Link>{category}</Nav.Link>\n                </LinkContainer>\n              </Nav.Item>\n            ))}\n          </Nav>\n        </div>\n        <main>\n          <Container className=\"mt-3\">\n            <Routes>\n              <Route path=\"/product/:slug\" element={<ProductScreen />} />\n              <Route path=\"/cart\" element={<CartScreen />} />\n              <Route path=\"/search\" element={<SearchScreen />} />\n              <Route path=\"/signin\" element={<SigninScreen />} />\n              <Route path=\"/signup\" element={<SignupScreen />} />\n              <Route\n                path=\"/forget-password\"\n                element={<ForgetPasswordScreen />}\n              />\n              <Route\n                path=\"/reset-password/:token\"\n                element={<ResetPasswordScreen />}\n              />\n\n              <Route\n                path=\"/profile\"\n                element={\n                  <ProtectedRoute>\n                    <ProfileScreen />\n                  </ProtectedRoute>\n                }\n              />\n              <Route\n                path=\"/map\"\n                element={\n                  <ProtectedRoute>\n                    <MapScreen />\n                  </ProtectedRoute>\n                }\n              />\n              <Route path=\"/placeorder\" element={<PlaceOrderScreen />} />\n              <Route\n                path=\"/order/:id\"\n                element={\n                  <ProtectedRoute>\n                    <OrderScreen />\n                  </ProtectedRoute>\n                }\n              ></Route>\n\n              <Route\n                path=\"/order/payment\"\n                element={\n                  <ProtectedRoute>\n                    <RazorpayPaymentScreen />\n                  </ProtectedRoute>\n                }\n              ></Route>\n\n              <Route\n                path=\"/orderhistory\"\n                element={\n                  <ProtectedRoute>\n                    <OrderHistoryScreen />\n                  </ProtectedRoute>\n                }\n              ></Route>\n              <Route\n                path=\"/shipping\"\n                element={<ShippingAddressScreen />}\n              ></Route>\n              <Route path=\"/payment\" element={<PaymentMethodScreen />}></Route>\n              {/* Admin Routes */}\n              <Route\n                path=\"/admin/dashboard\"\n                element={\n                  <AdminRoute>\n                    <DashboardScreen />\n                  </AdminRoute>\n                }\n              ></Route>\n              <Route\n                path=\"/admin/orders\"\n                element={\n                  <AdminRoute>\n                    <OrderListScreen />\n                  </AdminRoute>\n                }\n              ></Route>\n              <Route\n                path=\"/admin/users\"\n                element={\n                  <AdminRoute>\n                    <UserListScreen />\n                  </AdminRoute>\n                }\n              ></Route>\n              <Route\n                path=\"/admin/products\"\n                element={\n                  <AdminRoute>\n                    <ProductListScreen />\n                  </AdminRoute>\n                }\n              ></Route>\n              <Route\n                path=\"/admin/product/:id\"\n                element={\n                  <AdminRoute>\n                    <ProductEditScreen />\n                  </AdminRoute>\n                }\n              ></Route>\n              <Route\n                path=\"/admin/user/:id\"\n                element={\n                  <AdminRoute>\n                    <UserEditScreen />\n                  </AdminRoute>\n                }\n              ></Route>\n\n              <Route path=\"/\" element={<HomeScreen />} />\n            </Routes>\n          </Container>\n        </main>\n        <Footer />\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","/home/alok/Downloads/TrndZaade/frontend/src/Store.js",[],[],"/home/alok/Downloads/TrndZaade/frontend/src/utils.js",[],[],"/home/alok/Downloads/TrndZaade/frontend/src/screens/HomeScreen.js",["206","207"],[],"import { useEffect, useReducer, useState } from 'react';\nimport axios from 'axios';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Product from '../components/Product';\nimport { Helmet } from 'react-helmet-async';\nimport LoadingBox from '../components/LoadingBox';\nimport MessageBox from '../components/MessageBox';\n// import data from '../data';\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'FETCH_REQUEST':\n      return { ...state, loading: true };\n    case 'FETCH_SUCCESS':\n      return { ...state, products: action.payload, loading: false };\n    case 'FETCH_FAIL':\n      return { ...state, loading: false, error: action.payload };\n    default:\n      return state;\n  }\n};\n\nfunction HomeScreen() {\n  const [{ loading, error, products }, dispatch] = useReducer(reducer, {\n    products: [],\n    loading: true,\n    error: '',\n  });\n  // const [products, setProducts] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      dispatch({ type: 'FETCH_REQUEST' });\n      try {\n        const result = await axios.get('/api/products');\n        dispatch({ type: 'FETCH_SUCCESS', payload: result.data });\n      } catch (err) {\n        dispatch({ type: 'FETCH_FAIL', payload: err.message });\n      }\n\n      // setProducts(result.data);\n    };\n    fetchData();\n  }, []);\n  return (\n    <div>\n      <Helmet>\n        <title>Trendzaade</title>\n      </Helmet>\n\n      <div class=\"overflow-hidden\">\n        <div class=\"col-xxl-8\">\n          <div class=\"row flex-lg-nowrap align-items-center g-5\">\n            <div class=\"order-lg-1 w-100\">\n              <img\n                src=\"https://thumbs.dreamstime.com/b/online-shopping-vector-sale-banner-design-text-smartphone-cart-paper-bag-elements-internet-buying-selling-service-app-199752113.jpg\"\n                class=\"d-block mx-lg-auto img-fluid\"\n                alt=\"Photo by Milad Fakurian\"\n                width=\"2160\"\n                height=\"768\"\n              />\n            </div>\n            <div class=\"col-lg-6 col-xl-5 text-center text-lg-start pt-lg-5 mt-xl-4\">\n              <div class=\"lc-block mb-4\">\n                <div editable=\"rich\">\n                  <h1 class=\"fw-bold display-3\">\n                    The quick brown fox jumps over the lazy dog\n                  </h1>\n                </div>\n              </div>\n\n              <div class=\"lc-block mb-5\">\n                <div editable=\"rich\">\n                  <p class=\"rfs-8\">\n                    {' '}\n                    Lorem ipsum dolor sit amet, consectetur adipiscing elit.\n                    Nunc et metus id ligula malesuada placerat sit amet quis\n                    enim.\n                  </p>\n                </div>\n              </div>\n\n              <div class=\"lc-block mb-6\">\n                <a\n                  class=\"btn btn-primary px-4 me-md-2 btn-lg L-Affiliate-Tagged\"\n                  href=\"/search\"\n                  role=\"button\"\n                >\n                  Explore\n                </a>\n              </div>\n\n              <div class=\"lc-block\">\n                <div editable=\"rich\">\n                  <p class=\"fw-bold\"> Business collaboration based on trust:</p>\n                </div>\n              </div>\n              <div class=\"row\">\n                <div class=\"lc-block col-3\">\n                  <img\n                    class=\"img-fluid wp-image-975\"\n                    src=\"https://lclibrary.b-cdn.net/starters/wp-content/uploads/sites/15/2021/11/motorola.svg\"\n                    width=\"\"\n                    height=\"300\"\n                    srcset=\"\"\n                    sizes=\"\"\n                    alt=\"\"\n                  />\n                </div>\n                <div class=\"lc-block col-3\">\n                  <img\n                    class=\"img-fluid wp-image-977\"\n                    src=\"https://lclibrary.b-cdn.net/starters/wp-content/uploads/sites/15/2021/11/asus.svg\"\n                    width=\"\"\n                    height=\"300\"\n                    srcset=\"\"\n                    sizes=\"\"\n                    alt=\"\"\n                  />\n                </div>\n                <div class=\"lc-block col-3\">\n                  <img\n                    class=\"img-fluid wp-image-974\"\n                    src=\"https://lclibrary.b-cdn.net/starters/wp-content/uploads/sites/15/2021/11/sony.svg\"\n                    width=\"\"\n                    height=\"300\"\n                    srcset=\"\"\n                    sizes=\"\"\n                    alt=\"\"\n                  />\n                </div>\n                <div class=\"lc-block col-3\">\n                  <img\n                    class=\"img-fluid wp-image-967\"\n                    src=\"https://lclibrary.b-cdn.net/starters/wp-content/uploads/sites/15/2021/11/samsung-282297.svg\"\n                    width=\"\"\n                    height=\"300\"\n                    srcset=\"\"\n                    sizes=\"\"\n                    alt=\"\"\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <h1 className='my-5 text-center'>Featured Products</h1>\n      <div className=\"products\">\n        {loading ? (\n          <LoadingBox />\n        ) : error ? (\n          <MessageBox variant=\"danger\">{error}</MessageBox>\n        ) : (\n          <Row>\n            {products.map((product) => (\n              <Col key={product.slug} sm={6} md={4} lg={3} className=\"mb-3\">\n                <Product product={product}></Product>\n              </Col>\n            ))}\n          </Row>\n        )}\n      </div>\n    </div>\n  );\n}\nexport default HomeScreen;\n","/home/alok/Downloads/TrndZaade/frontend/src/screens/ShippingAddressScreen.js",[],[],"/home/alok/Downloads/TrndZaade/frontend/src/screens/ProductScreen.js",["208","209"],[],"import axios from 'axios';\nimport { useContext, useEffect, useReducer, useRef, useState } from 'react';\nimport { Link, useNavigate, useParams } from 'react-router-dom';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Card from 'react-bootstrap/Card';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport Form from 'react-bootstrap/Form';\nimport Badge from 'react-bootstrap/Badge';\nimport Button from 'react-bootstrap/Button';\nimport Rating from '../components/Rating';\nimport { Helmet } from 'react-helmet-async';\nimport LoadingBox from '../components/LoadingBox';\nimport MessageBox from '../components/MessageBox';\nimport { getError } from '../utils';\nimport { Store } from '../Store';\nimport FloatingLabel from 'react-bootstrap/FloatingLabel';\nimport { toast } from 'react-toastify';\nimport Carousel from 'react-bootstrap/Carousel';\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'REFRESH_PRODUCT':\n      return { ...state, product: action.payload };\n    case 'CREATE_REQUEST':\n      return { ...state, loadingCreateReview: true };\n    case 'CREATE_SUCCESS':\n      return { ...state, loadingCreateReview: false };\n    case 'CREATE_FAIL':\n      return { ...state, loadingCreateReview: false };\n    case 'FETCH_REQUEST':\n      return { ...state, loading: true };\n    case 'FETCH_SUCCESS':\n      return { ...state, product: action.payload, loading: false };\n    case 'FETCH_FAIL':\n      return { ...state, loading: false, error: action.payload };\n    default:\n      return state;\n  }\n};\n\nfunction ProductScreen() {\n  let reviewsRef = useRef();\n\n  const [rating, setRating] = useState(0);\n  const [comment, setComment] = useState('');\n  const [selectedImage, setSelectedImage] = useState('');\n\n  const navigate = useNavigate();\n  const params = useParams();\n  const { slug } = params;\n\n  const [{ loading, error, product, loadingCreateReview }, dispatch] =\n    useReducer(reducer, {\n      product: [],\n      loading: true,\n      error: '',\n    });\n  useEffect(() => {\n    const fetchData = async () => {\n      dispatch({ type: 'FETCH_REQUEST' });\n      try {\n        const result = await axios.get(`/api/products/slug/${slug}`);\n        dispatch({ type: 'FETCH_SUCCESS', payload: result.data });\n      } catch (err) {\n        dispatch({ type: 'FETCH_FAIL', payload: getError(err) });\n      }\n    };\n    fetchData();\n  }, [slug]);\n\n  const { state, dispatch: ctxDispatch } = useContext(Store);\n  const { cart, userInfo } = state;\n  const addToCartHandler = async () => {\n    const existItem = cart.cartItems.find((x) => x._id === product._id);\n    const quantity = existItem ? existItem.quantity + 1 : 1;\n    const { data } = await axios.get(`/api/products/${product._id}`);\n    \n    if (data.countInStock < quantity) {\n      window.alert('Sorry. Product is out of stock');\n      return;\n    }\n    ctxDispatch({\n      type: 'CART_ADD_ITEM',\n      payload: { ...product, quantity },\n    });\n    navigate('/cart');\n  };\n\n  const submitHandler = async (e) => {\n    e.preventDefault();\n    if (!comment || !rating) {\n      toast.error('Please enter comment and rating');\n      return;\n    }\n    try {\n      const { data } = await axios.post(\n        `/api/products/${product._id}/reviews`,\n        { rating, comment, name: userInfo.name },\n        {\n          headers: { Authorization: `Bearer ${userInfo.token}` },\n        }\n      );\n\n      dispatch({\n        type: 'CREATE_SUCCESS',\n      });\n      toast.success('Review submitted successfully');\n      product.reviews.unshift(data.review);\n      product.numReviews = data.numReviews;\n      product.rating = data.rating;\n      dispatch({ type: 'REFRESH_PRODUCT', payload: product });\n      window.scrollTo({\n        behavior: 'smooth',\n        top: reviewsRef.current.offsetTop,\n      });\n    } catch (error) {\n      toast.error(getError(error));\n      dispatch({ type: 'CREATE_FAIL' });\n    }\n  };\n  return loading ? (\n    <LoadingBox />\n  ) : error ? (\n    <MessageBox variant=\"danger\">{error}</MessageBox>\n  ) : (\n    <div>\n      <Row>\n        <Col md={6}>\n<Carousel variant=\"dark\">\n                {[product.image, ...product.images].map((x) => (\n                  <Carousel.Item>\n        <img\n          className=\"d-block w-100\"\n          src={x}\n          alt=\"Third slide\"\n        />\n        \n      </Carousel.Item>\n                ))}\n\n    </Carousel>\n\n\n\n        </Col>\n        <Col md={3}>\n          <ListGroup variant=\"flush\">\n            <ListGroup.Item>\n              <Helmet>\n                <title>{product.name}</title>\n              </Helmet>\n              <h1>{product.name}</h1>\n            </ListGroup.Item>\n            <ListGroup.Item>\n              <Rating\n                rating={product.rating}\n                numReviews={product.numReviews}\n              ></Rating>\n            </ListGroup.Item>\n            <ListGroup.Item>Price : ₹{product.price}</ListGroup.Item>\n            <ListGroup.Item>\n\n{[product.image, ...product.images].map((x) => (\n                 console.log(x)\n                ))}\n              \n            </ListGroup.Item>\n            <ListGroup.Item>\n              Description:\n              <p>{product.description}</p>\n            </ListGroup.Item>\n          </ListGroup>\n        </Col>\n        <Col md={3}>\n          <Card>\n            <Card.Body>\n              <ListGroup variant=\"flush\">\n                <ListGroup.Item>\n                  <Row>\n                    <Col>Price:</Col>\n                    <Col>₹{product.price}</Col>\n                  </Row>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <Row>\n                    <Col>Status:</Col>\n                    <Col>\n                      {product.countInStock > 0 ? (\n                        <Badge bg=\"success\">In Stock</Badge>\n                      ) : (\n                        <Badge bg=\"danger\">Unavailable</Badge>\n                      )}\n                    </Col>\n                  </Row>\n                </ListGroup.Item>\n\n                {product.countInStock > 0 && (\n                  <ListGroup.Item>\n                    <div className=\"d-grid\">\n                      <Button onClick={addToCartHandler} variant=\"primary\">\n                        Add to Cart\n                      </Button>\n                    </div>\n                  </ListGroup.Item>\n                )}\n              </ListGroup>\n            </Card.Body>\n          </Card>\n        </Col>\n      </Row>\n      <div className=\"my-3\">\n        <h2 ref={reviewsRef}>Reviews</h2>\n        <div className=\"mb-3\">\n          {product.reviews.length === 0 && (\n            <MessageBox>There is no review</MessageBox>\n          )}\n        </div>\n        <ListGroup>\n          {product.reviews.map((review) => (\n            <ListGroup.Item key={review._id}>\n              <strong>{review.name}</strong>\n              <Rating rating={review.rating} caption=\" \"></Rating>\n              <p>{review.createdAt.substring(0, 10)}</p>\n              <p>{review.comment}</p>\n            </ListGroup.Item>\n          ))}\n        </ListGroup>\n        <div className=\"my-3\">\n          {userInfo ? (\n            <form onSubmit={submitHandler}>\n              <h2>Write a customer review</h2>\n              <Form.Group className=\"mb-3\" controlId=\"rating\">\n                <Form.Label>Rating</Form.Label>\n                <Form.Select\n                  aria-label=\"Rating\"\n                  value={rating}\n                  onChange={(e) => setRating(e.target.value)}\n                >\n                  <option value=\"\">Select...</option>\n                  <option value=\"1\">1- Poor</option>\n                  <option value=\"2\">2- Fair</option>\n                  <option value=\"3\">3- Good</option>\n                  <option value=\"4\">4- Very good</option>\n                  <option value=\"5\">5- Excelent</option>\n                </Form.Select>\n              </Form.Group>\n              <FloatingLabel\n                controlId=\"floatingTextarea\"\n                label=\"Comments\"\n                className=\"mb-3\"\n              >\n                <Form.Control\n                  as=\"textarea\"\n                  placeholder=\"Leave a comment here\"\n                  value={comment}\n                  onChange={(e) => setComment(e.target.value)}\n                />\n              </FloatingLabel>\n\n              <div className=\"mb-3\">\n                <Button disabled={loadingCreateReview} type=\"submit\">\n                  Submit\n                </Button>\n                {loadingCreateReview && <LoadingBox></LoadingBox>}\n              </div>\n            </form>\n          ) : (\n            <MessageBox>\n              Please{' '}\n              <Link to={`/signin?redirect=/product/${product.slug}`}>\n                Sign In\n              </Link>{' '}\n              to write a review\n            </MessageBox>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\nexport default ProductScreen;\n","/home/alok/Downloads/TrndZaade/frontend/src/screens/PaymentMethodScreen.js",[],[],"/home/alok/Downloads/TrndZaade/frontend/src/screens/SigninScreen.js",[],[],"/home/alok/Downloads/TrndZaade/frontend/src/screens/SignupScreen.js",[],[],"/home/alok/Downloads/TrndZaade/frontend/src/screens/CartScreen.js",[],[],"/home/alok/Downloads/TrndZaade/frontend/src/screens/OrderHistoryScreen.js",[],[],"/home/alok/Downloads/TrndZaade/frontend/src/screens/OrderScreen.js",["210","211","212","213","214","215","216","217","218"],[],"import axios from 'axios';\nimport React, { useContext, useEffect, useReducer, useState } from 'react';\nimport { PayPalButtons, usePayPalScriptReducer } from '@paypal/react-paypal-js';\nimport { Helmet } from 'react-helmet-async';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport Card from 'react-bootstrap/Card';\nimport { Link } from 'react-router-dom';\nimport LoadingBox from '../components/LoadingBox';\nimport MessageBox from '../components/MessageBox';\nimport { Store } from '../Store';\nimport { getError } from '../utils';\nimport { toast } from 'react-toastify';\nimport { Axios } from 'axios';\n\nimport handlePayment from '../components/Payment';\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"CREATE_REQUEST\":\n      return { ...state, loading: true };\n    case \"CREATE_SUCCESS\":\n      return { ...state, loading: false };\n    case \"CREATE_FAIL\":\n      return { ...state, loading: false };\n    case 'FETCH_REQUEST':\n      return { ...state, loading: true, error: '' };\n    case 'FETCH_SUCCESS':\n      return { ...state, loading: false, order: action.payload, error: '' };\n    case 'FETCH_FAIL':\n      return { ...state, loading: false, error: action.payload };\n    case 'PAY_REQUEST':\n      return { ...state, loadingPay: true };\n    case 'PAY_SUCCESS':\n      return { ...state, loadingPay: false, successPay: true };\n    case 'PAY_FAIL':\n      return { ...state, loadingPay: false };\n    case 'PAY_RESET':\n      return { ...state, loadingPay: false, successPay: false };\n\n    case 'DELIVER_REQUEST':\n      return { ...state, loadingDeliver: true };\n    case 'DELIVER_SUCCESS':\n      return { ...state, loadingDeliver: false, successDeliver: true };\n    case 'DELIVER_FAIL':\n      return { ...state, loadingDeliver: false };\n    case 'DELIVER_RESET':\n      return {\n        ...state,\n        loadingDeliver: false,\n        successDeliver: false,\n      };\n    default:\n      return state;\n  }\n}\n\n\nexport default function OrderScreen() {\n\n  const { state } = useContext(Store);\n  const { userInfo } = state;\n\n  const params = useParams();\n  const { id: orderId } = params;\n  const navigate = useNavigate();\n\n  const [\n    {\n      loading,\n      error,\n      order,\n      successPay,\n      loadingPay,\n      loadingDeliver,\n      successDeliver,\n    },\n    dispatch,\n  ] = useReducer(reducer, {\n    loading: true,\n    order: {},\n    error: '',\n    successPay: false,\n    loadingPay: false,\n  });\n\n  const [{ isPending }, paypalDispatch] = usePayPalScriptReducer();\n\n  function createOrder(data, actions) {\n    return actions.order\n      .create({\n        purchase_units: [\n          {\n            amount: { value: order.totalPrice },\n          },\n        ],\n      })\n      .then((orderID) => {\n        return orderID;\n      });\n  }\n\n  function onApprove(data, actions) {\n    return actions.order.capture().then(async function (details) {\n      try {\n        dispatch({ type: 'PAY_REQUEST' });\n        const { data } = await axios.put(\n          `/api/orders/${order._id}/pay`,\n          details,\n          {\n            headers: { authorization: `Bearer ${userInfo.token}` },\n          }\n        );\n        dispatch({ type: 'PAY_SUCCESS', payload: data });\n        toast.success('Order is paid');\n      } catch (err) {\n        dispatch({ type: 'PAY_FAIL', payload: getError(err) });\n        toast.error(getError(err));\n      }\n    });\n  }\n  function onError(err) {\n    toast.error(getError(err));\n  }\n\n  useEffect(() => {\n    const fetchOrder = async () => {\n      try {\n        dispatch({ type: 'FETCH_REQUEST' });\n        const { data } = await axios.get(`/api/orders/${orderId}`, {\n          headers: { authorization: `Bearer ${userInfo.token}` },\n        });\n        dispatch({ type: 'FETCH_SUCCESS', payload: data });\n      } catch (err) {\n        dispatch({ type: 'FETCH_FAIL', payload: getError(err) });\n      }\n    };\n\n    if (!userInfo) {\n      return navigate('/login');\n    }\n    if (\n      !order._id ||\n      successPay ||\n      successDeliver ||\n      (order._id && order._id !== orderId)\n    ) {\n      fetchOrder();\n      if (successPay) {\n        dispatch({ type: 'PAY_RESET' });\n      }\n      if (successDeliver) {\n        dispatch({ type: 'DELIVER_RESET' });\n      }\n    } else {\n      const loadPaypalScript = async () => {\n        const { data: clientId } = await axios.get('/api/keys/paypal', {\n          headers: { authorization: `Bearer ${userInfo.token}` },\n        });\n        paypalDispatch({\n          type: 'resetOptions',\n          value: {\n            'client-id': clientId,\n            currency: 'USD',\n          },\n        });\n        paypalDispatch({ type: 'setLoadingStatus', value: 'pending' });\n      };\n      loadPaypalScript();\n    }\n  }, [\n    order,\n    userInfo,\n    orderId,\n    navigate,\n    paypalDispatch,\n    successPay,\n    successDeliver,\n  ]);\n\n  async function deliverOrderHandler() {\n    try {\n      dispatch({ type: 'DELIVER_REQUEST' });\n      const { data } = await axios.put(\n        `/api/orders/${order._id}/deliver`,\n        {},\n        {\n          headers: { authorization: `Bearer ${userInfo.token}` },\n        }\n      );\n      dispatch({ type: 'DELIVER_SUCCESS', payload: data });\n      toast.success('Order is delivered');\n    } catch (err) {\n      toast.error(getError(err));\n      dispatch({ type: 'DELIVER_FAIL' });\n    }\n  }\n\n\n\n  const { dispatch: ctxDispatch } = useContext(Store);\n\n\n\n\nconst placeOrderHandler = async () => {\n  try {\n    dispatch({ type: \"CREATE_REQUEST\" });\n\n    const { data } = await axios.post(\n      \"/api/orders/return\",\n      {\n        _id:orderId,\n        orderItems: order.orderItems,\n        shippingAddress: order.shippingAddress,\n        paymentMethod: order.paymentMethod,\n        itemsPrice: order.itemsPrice,\n        shippingPrice: order.shippingPrice,\n        taxPrice: order.taxPrice,\n        isPaid:order.isPaid,\n        totalPrice: order.totalPrice,\n        RazorpayOrderID: order.RazorpayOrderID,\n        RazorpayPaymentID: order.RazorpayPaymentID,\n        RazorpaySignature: order.RazorpaySignature,\n      },\n      {\n        headers: {\n          authorization: `Bearer ${userInfo.token}`,\n        },\n      }\n    );\n    // ctxDispatch({ type: \"CART_CLEAR\" });\n    dispatch({ type: \"CREATE_SUCCESS\" });\n    // localStorage.removeItem(\"cartItems\");\n    // navigate(`/order/${data.order._id}`);\n    toast.success(\"Return Request Submitted successfully\");\n  } catch (err) {\n    dispatch({ type: \"CREATE_FAIL\" });\n    console.log(err)\n  }\n\n\n};\n\n  return loading ? (\n    <LoadingBox></LoadingBox>\n  ) : error ? (\n    <MessageBox variant=\"danger\">{error}</MessageBox>\n  ) : (\n    <div>\n      {console.log(order)}\n      <Helmet>\n        <title>Order {orderId}</title>\n      </Helmet>\n      <h1 className=\"my-3\">Order {orderId}</h1>\n      <Row>\n        <Col md={8}>\n          <Card className=\"mb-3\">\n            <Card.Body>\n              <Card.Title>Shipping</Card.Title>\n              <Card.Text>\n                <strong>Name:</strong> {order.shippingAddress.fullName} <br />\n                <strong>Address: </strong> {order.shippingAddress.address},\n                {order.shippingAddress.city}, {order.shippingAddress.postalCode}\n                ,{order.shippingAddress.country}\n                &nbsp;\n                {order.shippingAddress.location &&\n                  order.shippingAddress.location.lat && (\n                    <a\n                      target=\"_new\"\n                      href={`https://maps.google.com?q=${order.shippingAddress.location.lat},${order.shippingAddress.location.lng}`}\n                    >\n                      Show On Map\n                    </a>\n                  )}\n              </Card.Text>\n              {order.isDelivered ? (\n                <MessageBox variant=\"success\">\n                  Delivered at {order.deliveredAt}\n                </MessageBox>\n              ) : (\n                <MessageBox variant=\"danger\">Not Delivered</MessageBox>\n              )}\n            </Card.Body>\n          </Card>\n          <Card className=\"mb-3\">\n            <Card.Body>\n              <Card.Title>Payment</Card.Title>\n              <Card.Text>\n                <strong>Method:</strong> {order.paymentMethod}\n              </Card.Text>\n              {order.isPaid ? (\n                <MessageBox variant=\"success\">\n                  Paid at {order.paidAt}\n                </MessageBox>\n              ) : (\n                <MessageBox variant=\"danger\">Not Paid</MessageBox>\n              )}\n            </Card.Body>\n          </Card>\n\n          <Card className=\"mb-3\">\n            <Card.Body>\n              <Card.Title>Items</Card.Title>\n              <ListGroup variant=\"flush\">\n                {order.orderItems.map((item) => (\n                  <ListGroup.Item key={item._id}>\n                    <Row className=\"align-items-center\">\n                      <Col md={6}>\n                        <img\n                          src={item.image}\n                          alt={item.name}\n                          className=\"img-fluid rounded img-thumbnail\"\n                        ></img>{' '}\n                        <Link to={`/product/${item.slug}`}>{item.name}</Link>\n                      </Col>\n                      <Col md={3}>\n                        <span>{item.quantity}</span>\n                      </Col>\n                      <Col md={3}>₹{item.price}</Col>\n                    </Row>\n                  </ListGroup.Item>\n                ))}\n              </ListGroup>\n            </Card.Body>\n          </Card>\n        </Col>\n        <Col md={4}>\n          <Card className=\"mb-3\">\n            <Card.Body>\n              <Card.Title>Order Summary</Card.Title>\n              <ListGroup variant=\"flush\">\n                <ListGroup.Item>\n                  <Row>\n                    <Col>Items</Col>\n                    <Col>₹{order.itemsPrice.toFixed(2)}</Col>\n                  </Row>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <Row>\n                    <Col>Shipping</Col>\n                    <Col>₹{order.shippingPrice.toFixed(2)}</Col>\n                  </Row>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <Row>\n                    <Col>Tax</Col>\n                    <Col>₹{order.taxPrice.toFixed(2)}</Col>\n                  </Row>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <Row>\n                    <Col>\n                      <strong> Order Total</strong>\n                    </Col>\n                    <Col>\n                      <strong>₹{order.totalPrice.toFixed(2)}</strong>\n                    </Col>\n                  </Row>\n                </ListGroup.Item>\n                {order.isDelivered && (\n                  <ListGroup.Item>\n                    {isPending ? (\n                      <LoadingBox />\n                    ) : (\n                      <div className=\"d-grid\">\n                      <Button type=\"button\" onClick={placeOrderHandler}>\n                        Request Return\n                      </Button>\n                    </div>\n                    )}\n                    {loadingPay && <LoadingBox></LoadingBox>}\n                  </ListGroup.Item>\n                )}\n                {console.log(userInfo)}\n                {userInfo.superAdmin && !order.isDelivered && (\n                  <ListGroup.Item>\n                    {loadingDeliver && <LoadingBox></LoadingBox>}\n                    <div className=\"d-grid\">\n                      <Button type=\"button\" onClick={deliverOrderHandler}>\n                        Deliver Order\n                      </Button>\n                    </div>\n                  </ListGroup.Item>\n                )}\n              </ListGroup>\n            </Card.Body>\n          </Card>\n        </Col>\n      </Row>\n    </div>\n  );\n}\n","/home/alok/Downloads/TrndZaade/frontend/src/screens/ProfileScreen.js",["219","220"],[],"import axios from 'axios';\nimport { useContext, useEffect, useReducer, useRef, useState } from 'react';\nimport { Link, useNavigate, useParams } from 'react-router-dom';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Card from 'react-bootstrap/Card';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport Form from 'react-bootstrap/Form';\nimport Badge from 'react-bootstrap/Badge';\nimport Button from 'react-bootstrap/Button';\nimport Rating from '../components/Rating';\nimport { Helmet } from 'react-helmet-async';\nimport LoadingBox from '../components/LoadingBox';\nimport MessageBox from '../components/MessageBox';\nimport { getError } from '../utils';\nimport { Store } from '../Store';\nimport FloatingLabel from 'react-bootstrap/FloatingLabel';\nimport { toast } from 'react-toastify';\nimport Carousel from 'react-bootstrap/Carousel';\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'REFRESH_PRODUCT':\n      return { ...state, product: action.payload };\n    case 'CREATE_REQUEST':\n      return { ...state, loadingCreateReview: true };\n    case 'CREATE_SUCCESS':\n      return { ...state, loadingCreateReview: false };\n    case 'CREATE_FAIL':\n      return { ...state, loadingCreateReview: false };\n    case 'FETCH_REQUEST':\n      return { ...state, loading: true };\n    case 'FETCH_SUCCESS':\n      return { ...state, product: action.payload, loading: false };\n    case 'FETCH_FAIL':\n      return { ...state, loading: false, error: action.payload };\n    default:\n      return state;\n  }\n};\n\nfunction ProductScreen() {\n  let reviewsRef = useRef();\n\n  const [rating, setRating] = useState(0);\n  const [comment, setComment] = useState('');\n  const [selectedImage, setSelectedImage] = useState('');\n\n  const navigate = useNavigate();\n  const params = useParams();\n  const { slug } = params;\n\n  const [{ loading, error, product, loadingCreateReview }, dispatch] =\n    useReducer(reducer, {\n      product: [],\n      loading: true,\n      error: '',\n    });\n  useEffect(() => {\n    const fetchData = async () => {\n      dispatch({ type: 'FETCH_REQUEST' });\n      try {\n        const result = await axios.get(`/api/products/slug/${slug}`);\n        dispatch({ type: 'FETCH_SUCCESS', payload: result.data });\n      } catch (err) {\n        dispatch({ type: 'FETCH_FAIL', payload: getError(err) });\n      }\n    };\n    fetchData();\n  }, [slug]);\n\n  const { state, dispatch: ctxDispatch } = useContext(Store);\n  const { cart, userInfo } = state;\n  const addToCartHandler = async () => {\n    const existItem = cart.cartItems.find((x) => x._id === product._id);\n    const quantity = existItem ? existItem.quantity + 1 : 1;\n    const { data } = await axios.get(`/api/products/${product._id}`);\n    \n    if (data.countInStock < quantity) {\n      window.alert('Sorry. Product is out of stock');\n      return;\n    }\n    ctxDispatch({\n      type: 'CART_ADD_ITEM',\n      payload: { ...product, quantity },\n    });\n    navigate('/cart');\n  };\n\n  const submitHandler = async (e) => {\n    e.preventDefault();\n    if (!comment || !rating) {\n      toast.error('Please enter comment and rating');\n      return;\n    }\n    try {\n      const { data } = await axios.post(\n        `/api/products/${product._id}/reviews`,\n        { rating, comment, name: userInfo.name },\n        {\n          headers: { Authorization: `Bearer ${userInfo.token}` },\n        }\n      );\n\n      dispatch({\n        type: 'CREATE_SUCCESS',\n      });\n      toast.success('Review submitted successfully');\n      product.reviews.unshift(data.review);\n      product.numReviews = data.numReviews;\n      product.rating = data.rating;\n      dispatch({ type: 'REFRESH_PRODUCT', payload: product });\n      window.scrollTo({\n        behavior: 'smooth',\n        top: reviewsRef.current.offsetTop,\n      });\n    } catch (error) {\n      toast.error(getError(error));\n      dispatch({ type: 'CREATE_FAIL' });\n    }\n  };\n  return loading ? (\n    <LoadingBox />\n  ) : error ? (\n    <MessageBox variant=\"danger\">{error}</MessageBox>\n  ) : (\n    <div>\n      <Row>\n        <Col md={6}>\n<Carousel variant=\"dark\">\n                {[product.image, ...product.images].map((x) => (\n                  <Carousel.Item>\n        <img\n          className=\"d-block w-100\"\n          src={x}\n          alt=\"Third slide\"\n        />\n        \n      </Carousel.Item>\n                ))}\n\n    </Carousel>\n\n\n\n        </Col>\n        <Col md={3}>\n          <ListGroup variant=\"flush\">\n            <ListGroup.Item>\n              <Helmet>\n                <title>{product.name}</title>\n              </Helmet>\n              <h1>{product.name}</h1>\n            </ListGroup.Item>\n            <ListGroup.Item>\n              <Rating\n                rating={product.rating}\n                numReviews={product.numReviews}\n              ></Rating>\n            </ListGroup.Item>\n            <ListGroup.Item>Price : ₹{product.price}</ListGroup.Item>\n            <ListGroup.Item>\n              {/* <Row xs={1} md={2} className=\"g-2\">\n                {[product.image, ...product.images].map((x) => (\n                  <Col key={x}>\n                    <Card>\n                      <Button\n                        className=\"thumbnail\"\n                        type=\"button\"\n                        variant=\"light\"\n                        onClick={() => setSelectedImage(x)}\n                      >\n                        <Card.Img variant=\"top\" src={x} alt=\"product\" />\n                      </Button>\n                    </Card>\n                  </Col>\n                ))}\n              </Row> */}\n\n{[product.image, ...product.images].map((x) => (\n                 console.log(x)\n                ))}\n              \n            </ListGroup.Item>\n            <ListGroup.Item>\n              Description:\n              <p>{product.description}</p>\n            </ListGroup.Item>\n          </ListGroup>\n        </Col>\n        <Col md={3}>\n          <Card>\n            <Card.Body>\n              <ListGroup variant=\"flush\">\n                <ListGroup.Item>\n                  <Row>\n                    <Col>Price:</Col>\n                    <Col>₹{product.price}</Col>\n                  </Row>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <Row>\n                    <Col>Status:</Col>\n                    <Col>\n                      {product.countInStock > 0 ? (\n                        <Badge bg=\"success\">In Stock</Badge>\n                      ) : (\n                        <Badge bg=\"danger\">Unavailable</Badge>\n                      )}\n                    </Col>\n                  </Row>\n                </ListGroup.Item>\n\n                {product.countInStock > 0 && (\n                  <ListGroup.Item>\n                    <div className=\"d-grid\">\n                      <Button onClick={addToCartHandler} variant=\"primary\">\n                        Add to Cart\n                      </Button>\n                    </div>\n                  </ListGroup.Item>\n                )}\n              </ListGroup>\n            </Card.Body>\n          </Card>\n        </Col>\n      </Row>\n      <div className=\"my-3\">\n        <h2 ref={reviewsRef}>Reviews</h2>\n        <div className=\"mb-3\">\n          {product.reviews.length === 0 && (\n            <MessageBox>There is no review</MessageBox>\n          )}\n        </div>\n        <ListGroup>\n          {product.reviews.map((review) => (\n            <ListGroup.Item key={review._id}>\n              <strong>{review.name}</strong>\n              <Rating rating={review.rating} caption=\" \"></Rating>\n              <p>{review.createdAt.substring(0, 10)}</p>\n              <p>{review.comment}</p>\n            </ListGroup.Item>\n          ))}\n        </ListGroup>\n        <div className=\"my-3\">\n          {userInfo ? (\n            <form onSubmit={submitHandler}>\n              <h2>Write a customer review</h2>\n              <Form.Group className=\"mb-3\" controlId=\"rating\">\n                <Form.Label>Rating</Form.Label>\n                <Form.Select\n                  aria-label=\"Rating\"\n                  value={rating}\n                  onChange={(e) => setRating(e.target.value)}\n                >\n                  <option value=\"\">Select...</option>\n                  <option value=\"1\">1- Poor</option>\n                  <option value=\"2\">2- Fair</option>\n                  <option value=\"3\">3- Good</option>\n                  <option value=\"4\">4- Very good</option>\n                  <option value=\"5\">5- Excelent</option>\n                </Form.Select>\n              </Form.Group>\n              <FloatingLabel\n                controlId=\"floatingTextarea\"\n                label=\"Comments\"\n                className=\"mb-3\"\n              >\n                <Form.Control\n                  as=\"textarea\"\n                  placeholder=\"Leave a comment here\"\n                  value={comment}\n                  onChange={(e) => setComment(e.target.value)}\n                />\n              </FloatingLabel>\n\n              <div className=\"mb-3\">\n                <Button disabled={loadingCreateReview} type=\"submit\">\n                  Submit\n                </Button>\n                {loadingCreateReview && <LoadingBox></LoadingBox>}\n              </div>\n            </form>\n          ) : (\n            <MessageBox>\n              Please{' '}\n              <Link to={`/signin?redirect=/product/${product.slug}`}>\n                Sign In\n              </Link>{' '}\n              to write a review\n            </MessageBox>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\nexport default ProductScreen;\n","/home/alok/Downloads/TrndZaade/frontend/src/screens/PlaceOrderScreen.js",["221","222","223","224"],[],"import Axios from \"axios\";\nimport React, { useContext, useEffect, useReducer, useState } from \"react\";\nimport { Helmet } from \"react-helmet-async\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Card from \"react-bootstrap/Card\";\nimport Button from \"react-bootstrap/Button\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\nimport { toast } from \"react-toastify\";\nimport { getError } from \"../utils\";\nimport { Store } from \"../Store\";\nimport CheckoutSteps from \"../components/CheckoutSteps\";\nimport LoadingBox from \"../components/LoadingBox\";\nimport axios from \"axios\";\n\nfunction onApprove(data, actions) {\n  return actions.order.capture().then(async function (details) {\n    try {\n      // dispatch({ type: 'PAY_REQUEST' });\n      // const { data } = await axios.put(\n      //   `/api/orders/${order._id}/pay`,\n      //   details,\n      //   {\n      //     headers: { authorization: `Bearer ${userInfo.token}` },\n      //   }\n      // );\n      // dispatch({ type: \"PAY_SUCCESS\", payload: data });\n      toast.success(\"Order is paid\");\n    } catch (err) {\n      // dispatch({ type: \"PAY_FAIL\", payload: getError(err) });\n      toast.error(getError(err));\n    }\n  });\n}\n\nfunction loadScript(src) {\n  return new Promise((resolve) => {\n    const script = document.createElement(\"script\");\n    script.src = src;\n    script.onload = () => {\n      resolve(true);\n    };\n    script.onerror = () => {\n      resolve(false);\n    };\n    document.body.appendChild(script);\n  });\n}\n\nconst __DEV__ = document.domain === \"localhost\";\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"CREATE_REQUEST\":\n      return { ...state, loading: true };\n    case \"CREATE_SUCCESS\":\n      return { ...state, loading: false };\n    case \"CREATE_FAIL\":\n      return { ...state, loading: false };\n    default:\n      return state;\n  }\n};\n\nexport default function PlaceOrderScreen() {\n  const navigate = useNavigate();\n  // onApprove(\"data\");\n\n  const [{ loading }, dispatch] = useReducer(reducer, {\n    loading: false,\n  });\n\n  const { state, dispatch: ctxDispatch } = useContext(Store);\n  const { cart, userInfo } = state;\n\n  const round2 = (num) => Math.round(num * 100 + Number.EPSILON) / 100; // 123.2345 => 123.23\n  cart.itemsPrice = round2(\n    cart.cartItems.reduce((a, c) => a + c.quantity * c.price, 0)\n  );\n  cart.shippingPrice = cart.itemsPrice > 100 ? round2(0) : round2(10);\n  cart.taxPrice = round2(0.15 * cart.itemsPrice);\n  cart.totalPrice = cart.itemsPrice + cart.shippingPrice + cart.taxPrice;\n\n  const [isPaid, setIsPaid] = useState(false);\n\n  const placeOrderHandler = async () => {\n\n    if(RazorpaySignature != null){\n      setIsPaid(true);\n    }\n\n    try {\n      dispatch({ type: \"CREATE_REQUEST\" });\n\n      const { data } = await Axios.post(\n        \"/api/orders\",\n        {\n          orderItems: cart.cartItems,\n          shippingAddress: cart.shippingAddress,\n          paymentMethod: cart.paymentMethod,\n          itemsPrice: cart.itemsPrice,\n          shippingPrice: cart.shippingPrice,\n          taxPrice: cart.taxPrice,\n          isPaid:isPaid,\n          totalPrice: cart.totalPrice,\n          RazorpayOrderID: RazorpayOrderID,\n          RazorpayPaymentID: RazorpayPaymentID,\n          RazorpaySignature: RazorpaySignature,\n        },\n        {\n          headers: {\n            authorization: `Bearer ${userInfo.token}`,\n          },\n        }\n      );\n      ctxDispatch({ type: \"CART_CLEAR\" });\n      dispatch({ type: \"CREATE_SUCCESS\" });\n      localStorage.removeItem(\"cartItems\");\n      navigate(`/order/${data.order._id}`);\n    } catch (err) {\n      dispatch({ type: \"CREATE_FAIL\" });\n      toast.error(getError(err));\n    }\n  };\n  const [PaymentSuccess, setPaymentSuccess] = useState(false);\n\n  useEffect(() => {\n    if (!cart.paymentMethod) {\n      navigate(\"/payment\");\n    }\n  }, [cart, navigate]);\n\n  useEffect(() => {\n    if (PaymentSuccess) {\n      console.log(\"orderPlaced\");\n      placeOrderHandler();\n      setPaymentSuccess(false);\n    }\n  }, [PaymentSuccess, placeOrderHandler]);\n\n  const [name, setName] = useState(\"\");\n  const [RazorpayOrderID, setRazorpayOrderID] = useState();\n\n  const [RazorpayPaymentID, setRazorpayPaymentID] = useState();\n  const [RazorpaySignature, setRazorpaySignature] = useState(null);\n\n  async function displayRazorpay() {\n\n   \n\n    if (cart.paymentMethod === \"Pay Now\") {\n      \n      const res = await loadScript(\n        \"https://checkout.razorpay.com/v1/checkout.js\"\n      );\n\n      if (!res) {\n        alert(\"Razorpay SDK failed to load. Are you online?\");\n        return;\n      }\n\n      const result = await axios.post(\"/api/payment/orders\", {\n        amount: cart.totalPrice,\n      });\n\n      const data = result.data;\n\n      console.log(data);\n\n      const options = {\n        key: __DEV__ ? \"rzp_test_OtYQpHZwPpuyIg\" : \"PRODUCTION_KEY\",\n        currency: data.currency,\n        amount: parseInt(data.amount),\n        order_id: data.id,\n        name: \"Trendzaade\",\n        description: \"Thank you for Shopping with us\",\n        image: \"/images/bag_logo.png\",\n        handler: function (response) {\n          setRazorpayOrderID(response.razorpay_order_id);\n          setRazorpayPaymentID(response.razorpay_payment_id);\n          setRazorpaySignature(response.razorpay_signature);\n          setPaymentSuccess(true);\n        },\n        \n      };\n      const paymentObject = new window.Razorpay(options);\n      paymentObject.open();\n    }\n    else{\n      setRazorpayOrderID(\"null\");\n      setRazorpayPaymentID(\"null\");\n      setRazorpaySignature(\"null\");\n      setPaymentSuccess(true);\n    }\n  }\n\n  return (\n    <div>\n      <CheckoutSteps step1 step2 step3 step4></CheckoutSteps>\n      <Helmet>\n        <title>Preview Order</title>\n      </Helmet>\n      <h1 className=\"my-3\">Preview Order</h1>\n      <Row>\n        <Col md={8}>\n          <Card className=\"mb-3\">\n            <Card.Body>\n              <Card.Title>Shipping</Card.Title>\n              <Card.Text>\n                <strong>Name:</strong> {cart.shippingAddress.fullName} <br />\n                <strong>Address: </strong> {cart.shippingAddress.address},\n                {cart.shippingAddress.city}, {cart.shippingAddress.postalCode},\n                {cart.shippingAddress.country}\n              </Card.Text>\n              <Link to=\"/shipping\">Edit</Link>\n            </Card.Body>\n          </Card>\n\n          <Card className=\"mb-3\">\n            <Card.Body>\n              <Card.Title>Payment</Card.Title>\n              <Card.Text>\n                <strong>Method:</strong> {cart.paymentMethod}\n              </Card.Text>\n              <Link to=\"/payment\">Edit</Link>\n            </Card.Body>\n          </Card>\n\n          <Card className=\"mb-3\">\n            <Card.Body>\n              <Card.Title>Items</Card.Title>\n              <ListGroup variant=\"flush\">\n                {cart.cartItems.map((item) => (\n                  <ListGroup.Item key={item._id}>\n                    <Row className=\"align-items-center\">\n                      <Col md={6}>\n                        <img\n                          src={item.image}\n                          alt={item.name}\n                          className=\"img-fluid rounded img-thumbnail\"\n                        ></img>{\" \"}\n                        <Link to={`/product/${item.slug}`}>{item.name}</Link>\n                      </Col>\n                      <Col md={3}>\n                        <span>{item.quantity}</span>\n                      </Col>\n                      <Col md={3}>₹{item.price}</Col>\n                    </Row>\n                  </ListGroup.Item>\n                ))}\n              </ListGroup>\n              <Link to=\"/cart\">Edit</Link>\n            </Card.Body>\n          </Card>\n        </Col>\n        <Col md={4}>\n          <Card>\n            <Card.Body>\n              <Card.Title>Order Summary</Card.Title>\n              <ListGroup variant=\"flush\">\n                <ListGroup.Item>\n                  <Row>\n                    <Col>Items</Col>\n                    <Col>₹{cart.itemsPrice.toFixed(2)}</Col>\n                  </Row>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <Row>\n                    <Col>Shipping</Col>\n                    <Col>₹{cart.shippingPrice.toFixed(2)}</Col>\n                  </Row>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <Row>\n                    <Col>Tax</Col>\n                    <Col>₹{cart.taxPrice.toFixed(2)}</Col>\n                  </Row>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <Row>\n                    <Col>\n                      <strong> Order Total</strong>\n                    </Col>\n                    <Col>\n                      <strong>₹{cart.totalPrice.toFixed(2)}</strong>\n                    </Col>\n                  </Row>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <div className=\"d-grid\">\n                    <Button\n                      type=\"button\"\n                      onClick={displayRazorpay}\n                      disabled={cart.cartItems.length === 0}\n                    >\n                      Place Order\n                    </Button>\n                  </div>\n                  {loading && <LoadingBox></LoadingBox>}\n                </ListGroup.Item>\n              </ListGroup>\n            </Card.Body>\n          </Card>\n        </Col>\n      </Row>\n    </div>\n  );\n}\n","/home/alok/Downloads/TrndZaade/frontend/src/screens/DashboardScreen.js",[],[],"/home/alok/Downloads/TrndZaade/frontend/src/screens/SearchScreen.js",[],[],"/home/alok/Downloads/TrndZaade/frontend/src/screens/ProductListScreen.js",[],[],"/home/alok/Downloads/TrndZaade/frontend/src/screens/ProductEditScreen.js",[],[],"/home/alok/Downloads/TrndZaade/frontend/src/screens/UserListScreen.js",[],[],"/home/alok/Downloads/TrndZaade/frontend/src/screens/OrderListScreen.js",[],[],"/home/alok/Downloads/TrndZaade/frontend/src/screens/UserEditScreen.js",[],[],"/home/alok/Downloads/TrndZaade/frontend/src/screens/MapScreen.js",["225"],[],"import axios from 'axios';\nimport React, { useContext, useEffect, useRef, useState } from 'react';\nimport {\n  LoadScript,\n  GoogleMap,\n  StandaloneSearchBox,\n  Marker,\n} from '@react-google-maps/api';\nimport { useNavigate } from 'react-router-dom';\nimport { Store } from '../Store';\nimport Button from 'react-bootstrap/Button';\nimport { toast } from 'react-toastify';\n\nconst defaultLocation = { lat: 45.516, lng: -73.56 };\nconst libs = ['places'];\n\nexport default function MapScreen() {\n  const { state, dispatch: ctxDispatch } = useContext(Store);\n  const { userInfo } = state;\n  const navigate = useNavigate();\n  const [googleApiKey, setGoogleApiKey] = useState('');\n  const [center, setCenter] = useState(defaultLocation);\n  const [location, setLocation] = useState(center);\n\n  const mapRef = useRef(null);\n  const placeRef = useRef(null);\n  const markerRef = useRef(null);\n\n  const getUserCurrentLocation = () => {\n    if (!navigator.geolocation) {\n      alert('Geolocation os not supported by this browser');\n    } else {\n      navigator.geolocation.getCurrentPosition((position) => {\n        setCenter({\n          lat: position.coords.latitude,\n          lng: position.coords.longitude,\n        });\n        setLocation({\n          lat: position.coords.latitude,\n          lng: position.coords.longitude,\n        });\n      });\n    }\n  };\n  useEffect(() => {\n    const fetch = async () => {\n      const { data } = await axios('/api/keys/google', {\n        headers: { Authorization: `BEARER ${userInfo.token}` },\n      });\n      setGoogleApiKey(data.key);\n      getUserCurrentLocation();\n    };\n\n    fetch();\n    ctxDispatch({\n      type: 'SET_FULLBOX_ON',\n    });\n  }, [ctxDispatch]);\n\n  const onLoad = (map) => {\n    mapRef.current = map;\n  };\n  const onIdle = () => {\n    setLocation({\n      lat: mapRef.current.center.lat(),\n      lng: mapRef.current.center.lng(),\n    });\n  };\n\n  const onLoadPlaces = (place) => {\n    placeRef.current = place;\n  };\n  const onPlacesChanged = () => {\n    const place = placeRef.current.getPlaces()[0].geometry.location;\n    setCenter({ lat: place.lat(), lng: place.lng() });\n    setLocation({ lat: place.lat(), lng: place.lng() });\n  };\n\n  const onMarkerLoad = (marker) => {\n    markerRef.current = marker;\n  };\n\n  const onConfirm = () => {\n    const places = placeRef.current.getPlaces() || [{}];\n    ctxDispatch({\n      type: 'SAVE_SHIPPING_ADDRESS_MAP_LOCATION',\n      payload: {\n        lat: location.lat,\n        lng: location.lng,\n        address: places[0].formatted_address,\n        name: places[0].name,\n        vicinity: places[0].vicinity,\n        googleAddressId: places[0].id,\n      },\n    });\n    toast.success('location selected successfully.');\n    navigate('/shipping');\n  };\n  return (\n    <div className=\"full-box\">\n      <LoadScript libraries={libs} googleMapsApiKey={googleApiKey}>\n        <GoogleMap\n          id=\"smaple-map\"\n          mapContainerStyle={{ height: '100%', width: '100%' }}\n          center={center}\n          zoom={15}\n          onLoad={onLoad}\n          onIdle={onIdle}\n        >\n          <StandaloneSearchBox\n            onLoad={onLoadPlaces}\n            onPlacesChanged={onPlacesChanged}\n          >\n            <div className=\"map-input-box\">\n              <input type=\"text\" placeholder=\"Enter your address\"></input>\n              <Button type=\"button\" onClick={onConfirm}>\n                Confirm\n              </Button>\n            </div>\n          </StandaloneSearchBox>\n          <Marker position={location} onLoad={onMarkerLoad}></Marker>\n        </GoogleMap>\n      </LoadScript>\n    </div>\n  );\n}\n","/home/alok/Downloads/TrndZaade/frontend/src/screens/ForgetPasswordScreen.js",[],[],"/home/alok/Downloads/TrndZaade/frontend/src/screens/ResetPasswordScreen.js",[],[],"/home/alok/Downloads/TrndZaade/frontend/src/components/SearchBox.js",[],[],"/home/alok/Downloads/TrndZaade/frontend/src/components/AdminRoute.js",[],[],"/home/alok/Downloads/TrndZaade/frontend/src/components/ProtectedRoute.js",[],[],"/home/alok/Downloads/TrndZaade/frontend/src/components/Product.js",[],[],"/home/alok/Downloads/TrndZaade/frontend/src/components/LoadingBox.js",[],[],"/home/alok/Downloads/TrndZaade/frontend/src/components/MessageBox.js",[],[],"/home/alok/Downloads/TrndZaade/frontend/src/components/CheckoutSteps.js",[],[],"/home/alok/Downloads/TrndZaade/frontend/src/components/Rating.js",[],[],"/home/alok/Downloads/TrndZaade/frontend/src/screens/RazorpayPaymentScreen.js",["226"],[],"import React from \"react\";\nimport axios from \"axios\";\n\nfunction RazorpayPaymentScreen(){\n    function loadScript(src) {\n        return new Promise((resolve) => {\n            const script = document.createElement(\"script\");\n            script.src = src;\n            script.onload = () => {\n                resolve(true);\n            };\n            script.onerror = () => {\n                resolve(false);\n            };\n            document.body.appendChild(script);\n        });\n    }\n\n    async function displayRazorpay() {\n        const res = await loadScript(\n            \"https://checkout.razorpay.com/v1/checkout.js\"\n        );\n\n        if (!res) {\n            alert(\"Razorpay SDK failed to load. Are you online?\");\n            return;\n        }\n\n        const result = await axios.post(\"/api/payment/orders\");\n\n        if (!result) {\n            alert(\"Server error. Are you online?\");\n            return;\n        }\n\n        // const {logo} = \"https://img.freepik.com/free-vector/people-logo-luxury-gradient-design-illustration_483537-1452.jpg\"\n\n        const { amount, id: order_id, currency } = result.data;\n\n        const options = {\n            key: \"rzp_test_OtYQpHZwPpuyIg\", // Enter the Key ID generated from the Dashboard\n            amount: amount.toString(),\n            currency: currency,\n            name: \"TrendZaade\",\n            description: \"Pay Now Get Delivered\",\n            image: \"https://img.freepik.com/free-vector/people-logo-luxury-gradient-design-illustration_483537-1452.jpg\",\n            order_id: order_id,\n            handler: async function (response) {\n                const data = {\n                    orderCreationId: order_id,\n                    razorpayPaymentId: response.razorpay_payment_id,\n                    razorpayOrderId: response.razorpay_order_id,\n                    razorpaySignature: response.razorpay_signature,\n                };\n\n            },\n            prefill: {\n                name: \"\",\n                email: \"\",\n                contact: \"\",\n            },\n            notes: {\n                address: \"Trendzaade Office\",\n            },\n            theme: {\n                color: \"#61dafb\",\n            },\n        };\n\n        const paymentObject = new window.Razorpay(options);\n        paymentObject.open();\n    }\n\n    return (\n        <div className=\"App\">\n            <header className=\"App-header\">\n                <img src=\"https://img.freepik.com/free-vector/people-logo-luxury-gradient-design-illustration_483537-1452.jpg\" className=\"App-logo\" alt=\"logo\" />\n                <p>Buy React now!</p>\n                <button className=\"App-link\" onClick={displayRazorpay}>\n                    Pay ₹500\n                </button>\n            </header>\n        </div>\n    );\n}\n\nexport default RazorpayPaymentScreen;","/home/alok/Downloads/TrndZaade/frontend/src/components/Sortingbar.js",["227"],[],"import Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport Nav from 'react-bootstrap/Nav';\nimport Navbar from 'react-bootstrap/Navbar';\n\nfunction Sortingbar(props) {\n  return (\n    <Navbar bg=\"light\" expand=\"lg\">\n      <Container fluid>\n        <Navbar.Toggle aria-controls=\"navbarScroll\" />\n        <Navbar.Collapse id=\"navbarScroll\">\n          <Nav\n            className=\"me-auto my-2 my-lg-0\"\n            style={{ maxHeight: '100px' }}\n            navbarScroll\n          >\n            <Nav.Link href=\"#action2\">{props.link}</Nav.Link>\n          </Nav>\n        </Navbar.Collapse>\n      </Container>\n    </Navbar>\n  );\n}\n\nexport default Sortingbar;","/home/alok/Downloads/TrndZaade/frontend/src/components/Payment.js",["228"],[],"import axios from \"axios\";\nimport { useState } from \"react\";\n// import \"./App.css\";\n\n\n\n\tconst initPayment = (data, book) => {\n\t\tconst options = {\n\t\t\tkey: \"rzp_test_wVqNyRVh1Gh4nm\",\n\t\t\tamount: data.amount,\n\t\t\tcurrency: data.currency,\n\t\t\tname: book.name,\n\t\t\tdescription: \"Test Transaction\",\n\t\t\timage: book.img,\n\t\t\torder_id: data.id,\n\t\t\thandler: async (response) => {\n\t\t\t\ttry {\n\t\t\t\t\tconst verifyUrl = \"http://localhost:3000/api/payment/verify\";\n\t\t\t\t\tconst { data } = await axios.post(verifyUrl, response);\n\t\t\t\t\tconsole.log(data);\n\t\t\t\t} catch (error) {\n\t\t\t\t\tconsole.log(error);\n\t\t\t\t}\n\t\t\t},\n\t\t\ttheme: {\n\t\t\t\tcolor: \"#3399cc\",\n\t\t\t},\n\t\t};\n\t\tconst rzp1 = new window.Razorpay(options);\n\t\trzp1.open();\n//         const rzp = new window.Razorpay();\n// rzp.createPayment(options);\n\t};\n\n\tconst handlePayment = async (book) => {\n\t\ttry {\n\t\t\tconst orderUrl = \"http://localhost:3000/api/payment/orders/pay\";\n\t\t\tconst { data } = await axios.post(orderUrl, { amount: book.price });\n\t\t\tconsole.log(data);\n\t\t\tinitPayment(data.data, book);\n\t\t} catch (error) {\n\t\t\tconsole.log(error);\n\t\t}\n\t};\n\n\t// return (\n\t// \t<div className=\"App\">\n\t// \t\t<div className=\"book_container\">\n\t// \t\t\t<img src={book.img} alt=\"book_img\" className=\"book_img\" />\n\t// \t\t\t<p className=\"book_name\">{book.name}</p>\n\t// \t\t\t<p className=\"book_author\">By {book.author}</p>\n\t// \t\t\t<p className=\"book_price\">\n\t// \t\t\t\tPrice : <span>&#x20B9; {book.price}</span>\n\t// \t\t\t</p>\n\t// \t\t\t<button onClick={handlePayment} className=\"buy_btn\">\n\t// \t\t\t\tbuy now\n\t// \t\t\t</button>\n\t// \t\t</div>\n\t// \t</div>\n\nexport default handlePayment;","/home/alok/Downloads/TrndZaade/frontend/src/screens/Footer.js",["229","230","231"],[],"import React from \"react\";\n\n\nconst Footer = () => {\n  return (\n    <>\n      {/* <!-- Remove the container if you want to extend the Footer to full width. --> */}\n      <div class=\"containe\">\n        {/* <!-- Footer --> */}\n        <footer\n          class=\"text-center text-lg-start text-white\"\n          style={{backgroundColor:\"#403a3a\", opacity:\"0.9\"}}\n        >\n          {/* <!-- Grid container --> */}\n          <div class=\"container p-4 pb-0\">\n            {/* <!-- Section: Links --> */}\n            <section class=\"\">\n              {/* <!--Grid row--> */}\n              <div class=\"row\">\n                {/* <!-- Grid column --> */}\n                <div class=\"col-md-3 col-lg-3 col-xl-3 mx-auto mt-3\">\n                  <h6 class=\"text-uppercase mb-4 font-weight-bold\">\n                    Company name\n                  </h6>\n                  <p>\n                    Here you can use rows and columns to organize your footer\n                    content. Lorem ipsum dolor sit amet, consectetur adipisicing\n                    elit.\n                  </p>\n                </div>\n                {/* <!-- Grid column --> */}\n\n                <hr class=\"w-100 clearfix d-md-none\" />\n\n                {/* <!-- Grid column --> */}\n                <div class=\"col-md-2 col-lg-2 col-xl-2 mx-auto mt-3\">\n                  <h6 class=\"text-uppercase mb-4 font-weight-bold\">Products</h6>\n                  <p>\n                    <a class=\"text-white\">MDBootstrap</a>\n                  </p>\n                  <p>\n                    <a class=\"text-white\">MDWordPress</a>\n                  </p>\n                  <p>\n                    <a class=\"text-white\" href=\"/beseller\">Become a Seller</a>\n                  </p>\n                  <p>\n                    <a class=\"text-white\">Bootstrap Angular</a>\n                  </p>\n                </div>\n                {/* <!-- Grid column --> */}\n\n                <hr class=\"w-100 clearfix d-md-none\" />\n\n                {/* <!-- Grid column --> */}\n                <hr class=\"w-100 clearfix d-md-none\" />\n\n                {/* <!-- Grid column --> */}\n                <div class=\"col-md-4 col-lg-3 col-xl-3 mx-auto mt-3\">\n                  <h6 class=\"text-uppercase mb-4 font-weight-bold\">Contact</h6>\n                  <p>\n                    <i class=\"fas fa-home mr-3\"></i> New York, NY 10012, US\n                  </p>\n                  <p>\n                    <i class=\"fas fa-envelope mr-3\"></i> info@gmail.com\n                  </p>\n                  <p>\n                    <i class=\"fas fa-phone mr-3\"></i> + 01 234 567 88\n                  </p>\n                  <p>\n                    <i class=\"fas fa-print mr-3\"></i> + 01 234 567 89\n                  </p>\n                </div>\n                {/* <!-- Grid column --> */}\n\n                {/* <!-- Grid column --> */}\n                <div class=\"col-md-3 col-lg-2 col-xl-2 mx-auto mt-3\">\n                  <h6 class=\"text-uppercase mb-4 font-weight-bold\">\n                    Follow us\n                  </h6>\n\n                  {/* <!-- Facebook --> */}\n                  <a\n                    class=\"btn btn-primary btn-floating m-1\"\n                    style={{backgroundColor: \"#3b5998\"}}\n                    href=\"#!\"\n                    role=\"button\"\n                  >\n                    <i class=\"fab fa-facebook-f\"></i>\n                  </a>\n\n                  {/* <!-- Twitter --> */}\n                  <a\n                    class=\"btn btn-primary btn-floating m-1\"\n                    style={{backgroundColor: \"#55acee\"}}\n                    href=\"#!\"\n                    role=\"button\"\n                  >\n                    <i class=\"fab fa-twitter\"></i>\n                  </a>\n\n                  {/* <!-- Google --> */}\n                  <a\n                    class=\"btn btn-primary btn-floating m-1\"\n                    style={{backgroundColor: \"#dd4b39\"}}\n                    href=\"#!\"\n                    role=\"button\"\n                  >\n                    <i class=\"fab fa-google\"></i>\n                  </a>\n\n                  {/* <!-- Instagram --> */}\n                  <a\n                    class=\"btn btn-primary btn-floating m-1\"\n                    style={{backgroundColor: \"#ac2bac\"}}\n                    href=\"#!\"\n                    role=\"button\"\n                  >\n                    <i class=\"fab fa-instagram\"></i>\n                  </a>\n\n                  {/* <!-- Linkedin --> */}\n                  <a\n                    class=\"btn btn-primary btn-floating m-1\"\n                    style={{backgroundColor: \"#0082ca\"}}\n                    href=\"#!\"\n                    role=\"button\"\n                  >\n                    <i class=\"fab fa-linkedin-in\"></i>\n                  </a>\n                  {/* <!-- Github --> */}\n                  <a\n                    class=\"btn btn-primary btn-floating m-1\"\n                    style={{backgroundColor: \"#333333\"}}\n                    href=\"#!\"\n                    role=\"button\"\n                  >\n                    <i class=\"fab fa-github\"></i>\n                  </a>\n                </div>\n              </div>\n              {/* <!--Grid row--> */}\n            </section>\n            {/* <!-- Section: Links --> */}\n          </div>\n          <div\n            class=\"text-center p-3\"\n            style={{backgroundColor: \"rgba(0, 0, 0, 0.2)\"}}\n          >\n            © 2020 Copyright:\n            <a class=\"text-white\" href=\"https://mdbootstrap.com/\">\n              MDBootstrap.com\n            </a>\n          </div>\n          {/* <!-- Copyright --> */}\n        </footer>\n        {/* <!-- Footer --> */}\n      </div>\n      {/* <!-- End of .container --> */}\n    </>\n  );\n};\n\nexport default Footer;\n",{"ruleId":"232","severity":1,"message":"233","line":23,"column":8,"nodeType":"234","messageId":"235","endLine":23,"endColumn":14},{"ruleId":"232","severity":1,"message":"236","line":40,"column":8,"nodeType":"234","messageId":"235","endLine":40,"endColumn":18},{"ruleId":"232","severity":1,"message":"237","line":1,"column":33,"nodeType":"234","messageId":"235","endLine":1,"endColumn":41},{"ruleId":"238","severity":1,"message":"239","line":55,"column":15,"nodeType":"240","endLine":61,"endColumn":17},{"ruleId":"232","severity":1,"message":"241","line":47,"column":10,"nodeType":"234","messageId":"235","endLine":47,"endColumn":23},{"ruleId":"232","severity":1,"message":"242","line":47,"column":25,"nodeType":"234","messageId":"235","endLine":47,"endColumn":41},{"ruleId":"232","severity":1,"message":"237","line":2,"column":52,"nodeType":"234","messageId":"235","endLine":2,"endColumn":60},{"ruleId":"232","severity":1,"message":"243","line":3,"column":10,"nodeType":"234","messageId":"235","endLine":3,"endColumn":23},{"ruleId":"232","severity":1,"message":"244","line":17,"column":10,"nodeType":"234","messageId":"235","endLine":17,"endColumn":15},{"ruleId":"232","severity":1,"message":"245","line":19,"column":8,"nodeType":"234","messageId":"235","endLine":19,"endColumn":21},{"ruleId":"232","severity":1,"message":"246","line":92,"column":12,"nodeType":"234","messageId":"235","endLine":92,"endColumn":23},{"ruleId":"232","severity":1,"message":"247","line":106,"column":12,"nodeType":"234","messageId":"235","endLine":106,"endColumn":21},{"ruleId":"232","severity":1,"message":"248","line":125,"column":12,"nodeType":"234","messageId":"235","endLine":125,"endColumn":19},{"ruleId":"232","severity":1,"message":"249","line":204,"column":21,"nodeType":"234","messageId":"235","endLine":204,"endColumn":32},{"ruleId":"232","severity":1,"message":"250","line":213,"column":13,"nodeType":"234","messageId":"235","endLine":213,"endColumn":17},{"ruleId":"232","severity":1,"message":"241","line":47,"column":10,"nodeType":"234","messageId":"235","endLine":47,"endColumn":23},{"ruleId":"232","severity":1,"message":"242","line":47,"column":25,"nodeType":"234","messageId":"235","endLine":47,"endColumn":41},{"ruleId":"232","severity":1,"message":"247","line":17,"column":10,"nodeType":"234","messageId":"235","endLine":17,"endColumn":19},{"ruleId":"251","severity":1,"message":"252","line":87,"column":9,"nodeType":"253","endLine":125,"endColumn":4},{"ruleId":"232","severity":1,"message":"254","line":142,"column":10,"nodeType":"234","messageId":"235","endLine":142,"endColumn":14},{"ruleId":"232","severity":1,"message":"255","line":142,"column":16,"nodeType":"234","messageId":"235","endLine":142,"endColumn":23},{"ruleId":"251","severity":1,"message":"256","line":58,"column":6,"nodeType":"257","endLine":58,"endColumn":19,"suggestions":"258"},{"ruleId":"232","severity":1,"message":"250","line":49,"column":23,"nodeType":"234","messageId":"235","endLine":49,"endColumn":27},{"ruleId":"232","severity":1,"message":"233","line":1,"column":8,"nodeType":"234","messageId":"235","endLine":1,"endColumn":14},{"ruleId":"232","severity":1,"message":"237","line":2,"column":10,"nodeType":"234","messageId":"235","endLine":2,"endColumn":18},{"ruleId":"259","severity":1,"message":"260","line":39,"column":21,"nodeType":"240","endLine":39,"endColumn":43},{"ruleId":"259","severity":1,"message":"260","line":42,"column":21,"nodeType":"240","endLine":42,"endColumn":43},{"ruleId":"259","severity":1,"message":"260","line":48,"column":21,"nodeType":"240","endLine":48,"endColumn":43},"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'Sortingbar' is defined but never used.","'useState' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'selectedImage' is assigned a value but never used.","'setSelectedImage' is assigned a value but never used.","'PayPalButtons' is defined but never used.","'Axios' is defined but never used.","'handlePayment' is defined but never used.","'createOrder' is defined but never used.","'onApprove' is defined but never used.","'onError' is defined but never used.","'ctxDispatch' is assigned a value but never used.","'data' is assigned a value but never used.","react-hooks/exhaustive-deps","The 'placeOrderHandler' function makes the dependencies of useEffect Hook (at line 140) change on every render. Move it inside the useEffect callback. Alternatively, wrap the definition of 'placeOrderHandler' in its own useCallback() Hook.","VariableDeclarator","'name' is assigned a value but never used.","'setName' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'userInfo.token'. Either include it or remove the dependency array.","ArrayExpression",["261"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md",{"desc":"262","fix":"263"},"Update the dependencies array to be: [ctxDispatch, userInfo.token]",{"range":"264","text":"265"},[1673,1686],"[ctxDispatch, userInfo.token]"]