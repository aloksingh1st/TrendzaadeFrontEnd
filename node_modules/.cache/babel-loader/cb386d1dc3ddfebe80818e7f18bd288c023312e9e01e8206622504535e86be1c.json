{"ast":null,"code":"import _slicedToArray from\"/home/alok/Downloads/TrndZaade/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";// import React, { useContext, useEffect, useState } from 'react';\n// import { Helmet } from 'react-helmet-async';\n// import { useNavigate } from 'react-router-dom';\n// import Form from 'react-bootstrap/Form';\n// import Button from 'react-bootstrap/Button';\n// import CheckoutSteps from '../components/CheckoutSteps';\n// import { Store } from '../Store';\n// import Payment from '../components/Payment';\n// import handlePayment from '../components/Payment';\n// export default function PaymentMethodScreen() {\n//   const [book, setBook] = useState({\n// \t\tname: \"Trendzaade\",\n// \t\tauthor: \"ALok\",\n// \t\timg: \"./images/text_logo.png\",\n// \t\tprice: 250,\n// \t});\n//   const navigate = useNavigate();\n//   const { state, dispatch: ctxDispatch } = useContext(Store);\n//   const {\n//     cart: { shippingAddress, paymentMethod },\n//   } = state;\n//   const [paymentMethodName, setPaymentMethod] = useState(\n//     paymentMethod || 'PayPal'\n//   );\n//   useEffect(() => {\n//     if (!shippingAddress.address) {\n//       navigate('/shipping');\n//     }\n//   }, [shippingAddress, navigate]);\n//   const submitHandler = (e) => {\n//     e.preventDefault();\n//     ctxDispatch({ type: 'SAVE_PAYMENT_METHOD', payload: paymentMethodName });\n//     localStorage.setItem('paymentMethod', paymentMethodName);\n//     navigate('/placeorder');\n//   };\n//   return (\n//     <div>\n//       <CheckoutSteps step1 step2 step3></CheckoutSteps>\n//       <div className=\"container small-container\">\n//         <Helmet>\n//           <title>Payment Method</title>\n//         </Helmet>\n//         <h1 className=\"my-3\">Payment</h1>\n//             <Button type=\"submit\" onClick={(()=>{handlePayment(book)})}>Pay Now</Button>\n//       </div>\n//     </div>\n//   );\n// }\nimport React,{useContext,useEffect,useState}from'react';import{Helmet}from'react-helmet-async';import{useNavigate}from'react-router-dom';import Form from'react-bootstrap/Form';import Button from'react-bootstrap/Button';import CheckoutSteps from'../components/CheckoutSteps';import{Store}from'../Store';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function PaymentMethodScreen(){var navigate=useNavigate();var _useContext=useContext(Store),state=_useContext.state,ctxDispatch=_useContext.dispatch;var _state$cart=state.cart,shippingAddress=_state$cart.shippingAddress,paymentMethod=_state$cart.paymentMethod;// const { state, dispatch: ctxDispatch } = useContext(Store);\n// const { cart, userInfo } = state;\n// const round2 = (num) => Math.round(num * 100 + Number.EPSILON) / 100; // 123.2345 => 123.23\n// cart.itemsPrice = round2(\n//   cart.cartItems.reduce((a, c) => a + c.quantity * c.price, 0)\n// );\n// cart.shippingPrice = cart.itemsPrice > 100 ? round2(0) : round2(10);\n// cart.taxPrice = round2(0.15 * cart.itemsPrice);\n// cart.totalPrice = cart.itemsPrice + cart.shippingPrice + cart.taxPrice;\n// console.log(\"TNOS\");\n// console.log(cart.totalPrice)\nvar _useState=useState(paymentMethod||'Razorpay'),_useState2=_slicedToArray(_useState,2),paymentMethodName=_useState2[0],setPaymentMethod=_useState2[1];useEffect(function(){if(!shippingAddress.address){navigate('/shipping');}},[shippingAddress,navigate]);var submitHandler=function submitHandler(e){e.preventDefault();ctxDispatch({type:'SAVE_PAYMENT_METHOD',payload:paymentMethodName});localStorage.setItem('paymentMethod',paymentMethodName);navigate('/placeorder');};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(CheckoutSteps,{step1:true,step2:true,step3:true}),/*#__PURE__*/_jsxs(\"div\",{className:\"container small-container\",children:[/*#__PURE__*/_jsx(Helmet,{children:/*#__PURE__*/_jsx(\"title\",{children:\"Payment Method\"})}),/*#__PURE__*/_jsx(\"h1\",{className:\"my-3\",children:\"Payment Method\"}),/*#__PURE__*/_jsxs(Form,{onSubmit:submitHandler,children:[/*#__PURE__*/_jsx(\"div\",{className:\"mb-3\",children:/*#__PURE__*/_jsx(Form.Check,{type:\"radio\",id:\"PayNow\",label:\"Pay Now\",value:\"Pay Now\",checked:paymentMethodName==='PayNow',onChange:function onChange(e){return setPaymentMethod(e.target.value);}})}),/*#__PURE__*/_jsx(\"div\",{className:\"mb-3\",children:/*#__PURE__*/_jsx(Form.Check,{type:\"radio\",id:\"PayOnDelivery\",label:\"Pay On Delivery\",value:\"Pay On Delivery\",checked:paymentMethodName==='PayOnDelivery',onChange:function onChange(e){return setPaymentMethod(e.target.value);}})}),/*#__PURE__*/_jsx(\"div\",{className:\"mb-3\",children:/*#__PURE__*/_jsx(Button,{type:\"submit\",children:\"Continue\"})})]})]})]});}","map":{"version":3,"names":["React","useContext","useEffect","useState","Helmet","useNavigate","Form","Button","CheckoutSteps","Store","PaymentMethodScreen","navigate","state","ctxDispatch","dispatch","cart","shippingAddress","paymentMethod","paymentMethodName","setPaymentMethod","address","submitHandler","e","preventDefault","type","payload","localStorage","setItem","target","value"],"sources":["/home/alok/Downloads/TrndZaade/frontend/src/screens/PaymentMethodScreen.js"],"sourcesContent":["// import React, { useContext, useEffect, useState } from 'react';\n// import { Helmet } from 'react-helmet-async';\n// import { useNavigate } from 'react-router-dom';\n// import Form from 'react-bootstrap/Form';\n// import Button from 'react-bootstrap/Button';\n// import CheckoutSteps from '../components/CheckoutSteps';\n// import { Store } from '../Store';\n// import Payment from '../components/Payment';\n// import handlePayment from '../components/Payment';\n\n// export default function PaymentMethodScreen() {\n\n\n//   const [book, setBook] = useState({\n// \t\tname: \"Trendzaade\",\n// \t\tauthor: \"ALok\",\n// \t\timg: \"./images/text_logo.png\",\n// \t\tprice: 250,\n// \t});\n\n\n\n//   const navigate = useNavigate();\n//   const { state, dispatch: ctxDispatch } = useContext(Store);\n//   const {\n//     cart: { shippingAddress, paymentMethod },\n//   } = state;\n\n//   const [paymentMethodName, setPaymentMethod] = useState(\n//     paymentMethod || 'PayPal'\n//   );\n\n//   useEffect(() => {\n//     if (!shippingAddress.address) {\n//       navigate('/shipping');\n//     }\n//   }, [shippingAddress, navigate]);\n//   const submitHandler = (e) => {\n//     e.preventDefault();\n//     ctxDispatch({ type: 'SAVE_PAYMENT_METHOD', payload: paymentMethodName });\n//     localStorage.setItem('paymentMethod', paymentMethodName);\n//     navigate('/placeorder');\n//   };\n\n\n\n//   return (\n\n\n\n//     <div>\n//       <CheckoutSteps step1 step2 step3></CheckoutSteps>\n//       <div className=\"container small-container\">\n//         <Helmet>\n//           <title>Payment Method</title>\n//         </Helmet>\n//         <h1 className=\"my-3\">Payment</h1>\n       \n//             <Button type=\"submit\" onClick={(()=>{handlePayment(book)})}>Pay Now</Button>\n  \n//       </div>\n//     </div>\n//   );\n// }\n\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport { useNavigate } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport CheckoutSteps from '../components/CheckoutSteps';\nimport { Store } from '../Store';\n\n\n\nexport default function PaymentMethodScreen() {\n  const navigate = useNavigate();\n  const { state, dispatch: ctxDispatch } = useContext(Store);\n  const {\n    cart: { shippingAddress, paymentMethod },\n  } = state;\n\n\n  // const { state, dispatch: ctxDispatch } = useContext(Store);\n  // const { cart, userInfo } = state;\n\n  // const round2 = (num) => Math.round(num * 100 + Number.EPSILON) / 100; // 123.2345 => 123.23\n  // cart.itemsPrice = round2(\n  //   cart.cartItems.reduce((a, c) => a + c.quantity * c.price, 0)\n  // );\n  // cart.shippingPrice = cart.itemsPrice > 100 ? round2(0) : round2(10);\n  // cart.taxPrice = round2(0.15 * cart.itemsPrice);\n  // cart.totalPrice = cart.itemsPrice + cart.shippingPrice + cart.taxPrice;\n\n\n  // console.log(\"TNOS\");\n  // console.log(cart.totalPrice)\n\n  const [paymentMethodName, setPaymentMethod] = useState(\n    paymentMethod || 'Razorpay'\n  );\n\n  useEffect(() => {\n    if (!shippingAddress.address) {\n      navigate('/shipping');\n    }\n  }, [shippingAddress, navigate]);\n  const submitHandler = (e) => {\n    e.preventDefault();\n    ctxDispatch({ type: 'SAVE_PAYMENT_METHOD', payload: paymentMethodName });\n    localStorage.setItem('paymentMethod', paymentMethodName);\n    navigate('/placeorder');\n  };\n\n  return (\n    <div>\n      <CheckoutSteps step1 step2 step3></CheckoutSteps>\n      <div className=\"container small-container\">\n        <Helmet>\n          <title>Payment Method</title>\n        </Helmet>\n        <h1 className=\"my-3\">Payment Method</h1>\n        <Form onSubmit={submitHandler}>\n          <div className=\"mb-3\">\n            <Form.Check\n              type=\"radio\"\n              id=\"PayNow\"\n              label=\"Pay Now\"\n              value=\"Pay Now\"\n              checked={paymentMethodName === 'PayNow'}\n              onChange={(e) => setPaymentMethod(e.target.value)}\n            />\n          </div>\n          <div className=\"mb-3\">\n            <Form.Check\n              type=\"radio\"\n              id=\"PayOnDelivery\"\n              label=\"Pay On Delivery\"\n              value=\"Pay On Delivery\"\n              checked={paymentMethodName === 'PayOnDelivery'}\n              onChange={(e) => setPaymentMethod(e.target.value)}\n            />\n          </div>\n          <div className=\"mb-3\">\n            <Button type=\"submit\">Continue</Button>\n          </div>\n\n        </Form>\n      </div>\n    </div>\n  );\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}